local conditions = require'heirline.conditions'
vim.opt.fillchars:append { stl ='─', stlnc='─' }
require('heirline').setup({
    statusline = {
        fallthrough = false,
        -- specialstatusline
        {
            condition = function()
                return conditions.buffer_matches({
                    buftype = { 'nofile', 'prompt', 'help', 'quickfix' },
                    filetype = { '^git.*', 'fugitive' }
                })
            end,
            {
                provider = '%=', hl = 'Comment'
            }
        },
        -- inactive
        {
            condition = conditions.is_not_active,
            {
                provider = '%=', hl = 'Comment'
            }
        },
        -- normal
        {
            { -- git
                condition = conditions.is_git_repo,
                init = function(self)
                    self.status_dict = vim.b.gitsigns_status_dict
                    self.has_changes = self.status_dict.added ~= 0
                        or self.status_dict.removed ~= 0
                        or self.status_dict.changed ~= 0
                end,
                hl = 'Comment',
                {
                    provider = '───', hl = 'Comment'
                },
                { -- git branch name
                    provider = function(self)
                        return '  ' .. self.status_dict.head
                    end,
                    hl = { bold = true },
                },
            },
            {
                provider = '%=', hl = 'Comment'
            },
            { -- fileformat
                provider = function()
                    local enc = (vim.bo.fenc ~= '' and vim.bo.fenc) or vim.o.enc
                    local fmt = vim.bo.fileformat
                    return ' ' .. enc .. '[' .. fmt .. ']'
                end,
                hl = 'Comment'
            },
            { -- ruler
                provider = ' [%l:%c] %p%% ',
                hl = 'Comment'
            },
            {
                provider = '───', hl = 'Comment'
            },
        }
    }
})
