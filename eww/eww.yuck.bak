(defwidget bar [screen]
  (centerbox :orientation "v"
    (box :class "segment-top"
         :valign "start"
      (top :screen screen))
    (box :valign "center"
         :class "middle" 
      (middle :screen screen))
    (box :valign "end"
         :class "segment-bottom" 
      (bottom :screen screen))))

(defwidget top [screen]
  (workspaces :wsp_yuck workspaces_1_yuck))

(defwidget workspaces [wsp_yuck]
  (literal :content wsp_yuck))

(defwidget middle [] (time))
(defwidget time []
  (box :orientation "v" 
       :class "time"
    hour min ))


(defwidget metric [icon ?font-size]
  (box :class "metric" 
       :orientation "v"
    (label :class "metric-icon" 
           :style {font-size != "" ? "font-size: ${font-size}rem;" : ""} 
           :text icon)
    (children)))

(defwidget bottom [screen] 
  (box :orientation "v"
       :valign "end"
       :space-evenly true
       :spacing "5"

    (metric :icon "" 
            :font-size 0.8
      "${round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}%")

    (metric :icon "" "${EWW_BATTERY.BAT0.capacity}%")

    (metric :icon "" "${round(EWW_RAM.used_mem_perc, 0)}%")

    (metric :icon "" "${round(EWW_CPU.avg, 0)}%")

    (box :class "metric" (date))))


(defwidget large-sym [sym]
  (label :class "metric-icon large-symbol" :text sym))

(defwidget date []
  (box :orientation "v" 
       :halign "center" 
    day_word day month year))

(defpoll hour :interval "10s" "date +%H")
(defpoll min  :interval "30s" "date +%M")

(defpoll day_word :interval "10m" "date +%a | tr [:upper:] [:lower:]")
(defpoll day      :interval "10m" "date +%d")
(defpoll month    :interval "1h"  "date +%m")
(defpoll year     :interval "1h"  "date +%y")

(defvar workspaces_1_yuck "")
;(defvar workspaces_2_yuck "")


(defwindow bar_1
  :monitor 0
  :stacking "bg"
  :geometry (geometry :x 0 :y 0 :width "40px" :height "100%")
  :anchor "top left"
  :reserve (struts :distance "40px" :side "left")
  (bar :screen 0))

;(defwindow bar_2
;  :monitor 2
;  :geometry (geometry :x 0 :y 0 :width "40px" :height "100%")
;  :anchor "top left"
;  :reserve (struts :distance "40px" :side "left")
;  (bar :screen 2))




;(defwidget music-popup []
;(if-else :cond {music_data.status == "Stopped" || music_data.status == ""}
;"No music playing"
;(box :orientation "h" 
;:valign "fill"
;:space-evenly false 
;:spacing 10
;(button :onclick "playerctl previous" "⏮")
;"${music_data.artist} - ${music_data.title}"
;(button :onclick "playerctl next" "⏭"))))

;(defwindow music_popup
;:monitor 1
;:anchor "bottom left"
;:geometry (geometry :x "30px" :y "10px" :height "65px")
;(music-popup))
